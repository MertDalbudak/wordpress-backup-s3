# ===========================================
# WordPress Backup Service Configuration
# ===========================================

# Database Configuration (Required)
# ----------------------------------
MYSQL_HOST=db
MYSQL_USER=wordpress
MYSQL_PASSWORD=your_secure_db_password
MYSQL_DATABASE=wordpress

# AWS S3 Configuration (Required)
# --------------------------------
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
AWS_DEFAULT_REGION=eu-central-1
S3_BUCKET=your-wordpress-backups

# Backup Configuration
# --------------------
# How often to run backups
# Options: hourly, daily, weekly, monthly, or custom cron expression
BACKUP_INTERVAL=daily

# How many days to keep backups (both local and S3)
RETENTION_DAYS=7

# Path to WordPress content directory inside container
WP_CONTENT_PATH=/var/www/html

# Run backup immediately on container start
RUN_INITIAL_BACKUP=true

# ===========================================
# Advanced Configuration (Optional)
# ===========================================

# Custom cron expressions (only if BACKUP_INTERVAL is not hourly/daily/weekly/monthly)
# Examples:
# BACKUP_INTERVAL="0 */6 * * *"    # Every 6 hours
# BACKUP_INTERVAL="30 1 * * *"     # Daily at 1:30 AM
# BACKUP_INTERVAL="0 3 * * 1,3,5"  # Monday, Wednesday, Friday at 3 AM

# ===========================================
# Example Configurations
# ===========================================

# Development Environment
# ------------------------
# BACKUP_INTERVAL=hourly
# RETENTION_DAYS=3
# RUN_INITIAL_BACKUP=true

# Production Environment
# ----------------------
# BACKUP_INTERVAL=daily
# RETENTION_DAYS=30
# RUN_INITIAL_BACKUP=false

# High-Traffic Site
# -----------------
# BACKUP_INTERVAL="0 */4 * * *"  # Every 4 hours
# RETENTION_DAYS=14
# S3_BUCKET=production-wp-backups-company

# ===========================================
# Security Notes
# ===========================================
# - Never commit the actual .env file to version control
# - Use IAM roles in production instead of access keys when possible
# - Ensure your S3 bucket has appropriate access policies
# - Use strong, unique passwords for database access
# - Consider encrypting sensitive environment variables